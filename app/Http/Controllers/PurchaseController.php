<?php
/*
* ProBot Version: 3.0
* Laravel Version: 10x
* Description: This source file "app/Http/_PurchaseController.php" was generated by ProBot AI.
* Date: 5/6/2023 1:46:28 AM
* Contact: towhid1@outlook.com
*/
namespace App\Http\Controllers;
use App\Http\Controllers\Controller;
use App\Models\Purchase;
use App\Models\Purchase_detail;
use App\Models\Stock;
use App\Models\Uom;
use App\Models\Product;
use App\Models\Supplier;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Redirect;
use Illuminate\Support\Facades\DB;
use Illuminate\Pagination\Paginator;
class PurchaseController extends Controller{
	public function index(){
		$purchases=DB::table('purchases as ph')
		->join('suppliers as s','ph.supplier_id','=','s.id')
		->join('products as p','ph.product_id','=','p.id')
		->select('ph.id','p.name as pdt','s.name as spl','ph.purchase_date','ph.delivery_date','ph.shipping_address','ph.purchase_total','ph.paid_amount','ph.remark','ph.discount','ph.vat','ph.created_at','ph.updated_at')
		->paginate(10);
		return view("pages.erp.purchase.managepurchase",["purchases"=>$purchases]);
	}
	public function create(){
		
		return view("pages.erp.purchase.createpurchase",["suppliers"=>Supplier::all(),"products"=>Product::all(),"uoms"=>Uom::all()]);
	}
	public function store(Request $request){
		//Purchase::create($request->all());
		$purchase = new Purchase;
		$purchase->product_id=$request->product_id;
		$purchase->supplier_id=$request->supplier_id;
		$purchase->purchase_date=date('Y-M-D',($request->purchase_date));
		$purchase->delivery_date=date('Y-M-D',($request->delivery_date));
		$purchase->shipping_address=$request->shipping_address;
		$purchase->purchase_total=$request->purchase_total;
		$purchase->paid_amount=$request->paid_amount;
		$purchase->remark=$request->remark;
		$purchase->discount=$request->discount;
		$purchase->vat=$request->vat;
date_default_timezone_set("Asia/Dhaka");
		$purchase->created_at=date('Y-m-d H:i:s');
date_default_timezone_set("Asia/Dhaka");
		$purchase->updated_at=date('Y-m-d H:i:s');

		$purchase->save();

		$purchase_details=$request->txtproduct;
	foreach ($purchase_details as $purchase_detail) {

	$detail_purchase=new Purchase_Detail;
	$detail_purchase->purchase_id=$purchase->id;
	$detail_purchase->product_id=$purchase_detail['product_id'];
	$detail_purchase->uom_id=$purchase_detail['uom_id'];
	$detail_purchase->price=$purchase_detail['[price'];
	$detail_purchase->vat=$purchase_detail['vat'];
	$detail_purchase->discount=$purchase_detail['discount'];
	$detail_purchase->save();
	


}
$stock=new Stock;
$stock->product_id=$purchase_detail['product_id'];
$stock->qty=$purchase_detail['qty'];
$stock->uom_id=$purchase_detail['uom_id'];
$stock->remark=$purchase_detail['remark'];
$stock->save();
		return back()->with('success', 'Created Successfully.');
	}
	public function show($id){
		
		$purchase = DB::table('purchases as ph')
		->join('suppliers as s','ph.supplier_id','=','s.id')
		->join('products as p','ph.product_id','=','p.id')
		->where('ph.id',$id)
		->select('ph.id','p.name as pdt','s.name as spl','ph.purchase_date','ph.delivery_date','ph.shipping_address','ph.purchase_total','ph.paid_amount','ph.remark','ph.discount','ph.vat','ph.created_at','ph.updated_at')
		->first();
		return view("pages.erp.purchase.detailspurchase",["purchase"=>$purchase]);
	}
	public function edit(Purchase $purchase){


		return view("pages.erp.purchase.editpurchase",["purchase"=>$purchase,"suppliers"=>Supplier::all()]);
	}
	public function update(Request $request,Purchase $purchase){
		//Purchase::update($request->all());
		$purchase = Purchase::find($purchase->id);
		$purchase->name=$request->name;
		$purchase->supplier_id=$request->supplier_id;
		$purchase->purchase_date=$request->purchase_date;
		$purchase->delivery_date=$request->delivery_date;
		$purchase->shipping_address=$request->shipping_address;
		$purchase->purchase_total=$request->purchase_total;
		$purchase->paid_amount=$request->paid_amount;
		$purchase->remark=$request->remark;
		$purchase->discount=$request->discount;
		$purchase->vat=$request->vat;
date_default_timezone_set("Asia/Dhaka");
		$purchase->created_at=date('Y-m-d H:i:s');
date_default_timezone_set("Asia/Dhaka");
		$purchase->updated_at=date('Y-m-d H:i:s');

		$purchase->save();

		return redirect()->route("purchases.index")->with('success','Updated Successfully.');
	}
	public function destroy(Purchase $purchase){
		$purchase->delete();
		return redirect()->route("purchases.index")->with('success', 'Deleted Successfully.');
	}
}
?>
